java.lang.Object
------------------------
Object class is the parent class of every class in java even the class is predefined or it is user defined.

So all the classes inherits all public and protected methods of object class.

class A {
    
}

public methods
--------------------
Class getClass()
String toString()
int hashCode()
boolean equals(Object)


void notify();
void notifyAll();
void wait()
void wait(long ms)
void wait(long ms, int ns)

protected methods
---------------------
protected void finalize();
protected void clone();

Class getClass():
------------------------
This method is used to achieve the object of Class class from any object and Class class is used to fetch the metadata about any object/class.
    Meta Data
    ---------------
        class Name
        Methods
        Constructors
        Modifiers

class A {

}

main() {
    A a1 = new A();
    Class clazz = a1.getClass();            // a1.getClass().getName()
    System.out.println(clazz.getName());
}

------------------------------------------

String toString():
-----------------------
This method is used to provide the string representation of any object.

The default String representation of any object is `className@hashcode`


Most of the predefined class already override the toString() method to provide the meaningful string representation of their object.

If you want to get meaningful string representation for your classes then you have to override toString() method for your classes.

int hashCode()
---------------------
In java, every object has a unique code associated with it and hashCode() method is used to retrive that code.

boolean equals(Object)
------------------------
This method is used to perform the deep comparision. If matches the content of the object and compare the object.

By default all the predefined class overrides the equals method so it performs the deep comparision.

For user defined class untill we don't override the equals method it works similar as ==(Equality operator) and performs the shallow comparasion.

To perform the deep comparasion we must override the equals() method in our classes.