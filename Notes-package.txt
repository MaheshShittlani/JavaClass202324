                Package in java
------------------------------------------
What is the Package?
-------------------------
1. Package is the collection of classes and interface grouped together.

2. If offers the better management of classes and prevent the naming conflict.

    project
        |-----Admission
        |-----Student
                -Account (project.Student.Account)
                -PersonalDetail
                -EductionalDetail
        |----Fees
        |----Finance (project.Finance.Account)
        |       - Account

3. Package is the management of .classes generated by the compiler. But mostly used practises maintain the same structure for .java files also.

4. In java, predefined classes (JAVA API) are also maintained in a packaging. 

    java
        - lang (auto imported)
            - System
            - Integer
            - String
            - Arrays
            - Float
        - util
            - Scanner
        - io
            - Console (java.io.Console)
        - net
            - 
        - sql

How to create a package and put the classes into packages.
---------------------------------------------------------
To put a class into a package you need to write the package statement in the first line of your source code.

package p1;
class A {

}

------------------
package org.netcom.library;
class Book {

}
    org
     - netcom
            - library
                    - Book

Note:
    - Package statement must be written in the first line, only comments and blank lines are allowed before the package statement.
    - Generally package name is written in the reverse order of the domain. But it is not mandatory.


How to generate packages?
        OR
How to put the .classes into packages auto?
-----------------------------
javac -d <directory where to generate the .classes hierarchy> programName


Example:
------------
    javac -d . p1.java (Generate the hierarchy into current directory)

    javac -d c:\javalib p1.java (Generate the hierarchy into c:\javalib)

How to run the classes from a package.
---------------------------------------
0. Goto the base directory where your package hierarchy exists.
1. Run the .class file (Application class) with full name.


Scenerio #1
----------------
Classes of same package can use each other directly.

Scenerio #2
------------------
A class can use the class from the other package but need to inform the compiler that from which package the class is beloging...
This can be done by two ways...
    1. Write the full name of the class (prequalified with package name)
    2. import the class

How to import the class
-----------------------
    1. import java.io.*; (import all the classes of java.io but not the classes of subpackages)
    2. import java.io.Console; (import only Console class for java.io package) - Recommanded

Constraint
-----------------
Only public classes are allowed to be used outside the package.

Rules for the public class
----------------------------
1. public class name must be save with the same name of the class.
2. In a single file only one public class can exists.


Scenerio #3
-------------------
The library classes exists in one directory(c:\javalib) and our java classes exist in another directory(c:\users\douments\javaprograms).


    c:\javalib
        - p1/Person.class

    c:\users\documents\javaprograms
        -TestPerson.java (import p1.Person;)

1. By default java search for import path into classpath.
2. Default classpath is current directory so by default compiler search for all the classes into current directory.
3. If your library classes exists on another location not on the current directory then you need to inform the location by using `classpath`.

How to specify classpath
-----------------------------
 1. Provide environment variable in java commands
 
        * javac -d . -classpath <classpath> programName.java
        - java -classpath <classpath> .className

2. Set the environment variable in command line session
    * set classpath=<classpath>
    - set classpath=.;c:\javalib
    - set (Show all the environment variable in command prompt)

3. Set the environment variable with the name `classpath`


